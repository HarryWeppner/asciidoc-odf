= ODF backend for AsciiDoc
Dag Wieers <dag@wieers.com>

The ODF backend for AsciiDoc enables AsciiDoc users to directly convert
documents from AsciiDoc to Open Document Format v1.2.

AsciiDoc is a lightweight markup language that maps to DocBook semantics
and makes writing (technical) documentation more enjoyable as it removes
styling and formating from the creative process.


== Benefits
The ODF backend provides the following benefits:

 - Visual styling and formatting using LibreOffice
   (no more need to modify pesky XSLT or XSL-FO)

 - Saving and re-applying styles during processing
   (simply modify styles in LibreOffice and save them to reapply)

 - Converting to various formats supported by LibreOffice
   (export plugins include PDF, DOC, HTML, ...)


== Limitations
The current implementation is not feature complete. We are working on
it and your help in testing and feedback is appreciated.

 - Incomplete implementation lacks eg. TOC support, ...

 - Default stylesheet needs improvements

 - Only document (odt) files are currently supported, presentations (odp)
   support would be nice too

We hope to address each of these limitations in the future, with your help.


== Usage
To use this backend, copy the file _odt.conf_ into your AsciiDoc
configuration directory _/etc/asciidoc/_. Then use:

    # asciidoc -b odt document.txt

This will produce the file _document.odt_.


=== Embedded Images
If you use images in your document, they can be embedded in your ODF
document. To do this use the option +-a data-uri+ on the command line
or add the following option in your AsciiDoc file just below the
document title:

    :data-uri:

[NOTE]
Embedding SVG images does not work because LibreOffice expects them
encapsulated inside SVM (StarView Metafile) files. SVM is undocumented
and not a standard. We hope LibreOffice drops SVM encapsulation soon.
Most formats however are supported, although ODF recommends PNG and SVG.


=== Admonition Icon Support
If you use admonitions in your documents, please use the options
+-a icons -a iconsdir=/usr/share/asciidoc/images/icons+ on the
command line or add the following options just below the document
title:

    :icons:
    :iconsdir: /usr/share/asciidoc/images/icons


=== Numbered titles
If you like titles to be numbered, please use the option +- numbered+ on
the command line or add the following option in your AsciiDoc file just
below the document title:

    :numbered:

[NOTE]
The current implementation adds title numbers always. Since numbering
chapters/section is part of the stylesheet in ODF, it is harder too make
this configurable/optional.


=== Using themes (or custom stylesheets)
The ODF backend can uses themes, which means that it can use alternative
stylesheets. Currently the curiculum-vitae example uses its own (basic)
theme as an example of how this is supposed to work. To select a theme
you can add the option +-a theme=cv+ on the command line or add the
following option in your AsciiDoc file just below the document title:

    :theme: cv

We plan to adapt a2x to automatically merge the existing styles from
an .odt or .ott file, so that one can save the modified work from
LibreOffice and use the styles from that document as the input for
future documents.

We think this is easier for end-users than extracting the styles
and putting it into themes, but both methods will be available.


== Development
You can find the latest version of this AsciiDoc backend at
http://github.com/dagwieers/asciidoc-odf[]

You can help improve the backend by looking for missing/non-working
functionality and implemening/fixing it in the odt.conf file.
Using LibreOffice and saving your tests, and inspecting how LibreOffice
does something helps to understand what is needed for the backend.

If you start off using a flat ODF file, LibreOffice will use flat
ODF files as well, so the turn-around time in debugging/development
is quite fast.

Any issues or feedback can be communicated using the Github web interface.

== Packaged ODT from a2x

The directory "packaged" contains a proof of concept a2x which has been
modified to take backend extensions in an a2x.conf file in the backend
directory.  This file goes in the normal backend location, eg
$HOME/.asciidoc/backends/odt

The new --backend option specifies a backend plugin name and the --backend_opts
specifies options for it (like --xslt_opts or --fop_opts).

There is a proof of concept a2x.conf that performs creation of packaged ODT
taking styles from ODF templates, which are just normal ODF documents.  This
allows styling to be defined interactively using Libreoffice or Openoffice.

Put the modified a2x in a test directory, don't install over the system a2x
or put it in your path yet.

Usage:

----
./a2x.py -v --backend=odt --backend_opts="--base_doc=your_template.ott" your_file.txt
----

Later versions will have a default template document so the base_doc isn't
required by default.

== Further Reading
Apart from the official specifications, little information is available.

 - http://docs.oasis-open.org/office/v1.0/errata/os/OpenDocument-v1.0-errata-02-os.pdf[Open Document Format for Office Applications (OpenDocument) v1.0]
 - http://docs.oasis-open.org/office/v1.1/OpenDocument-v1.1.pdf[Open Document Format for Office Applications (OpenDocument) v1.1]
 - http://docs.oasis-open.org/office/v1.2/OpenDocument-v1.2-part1.pdf[Open Document Format for Office Applications (OpenDocument) v1.2]
 - http://en.wikipedia.org/wiki/OpenDocument_technical_specification[OpenDocument technical specification]
