= ODF backend for AsciiDoc
Dag Wieers <dag@wieers.com>

The ODF backend for AsciiDoc enables AsciiDoc users to directly convert
documents from AsciiDoc to Open Document Format v1.1.


== Benefits
The ODF backend provides the following benefits:

 - GUI styling and formatting using LibreOffice
   (no more need to modify pesky XSLT)

 - Saving and re-applying styles during processing
   (simply modify styles in LibreOffice and save them to reapply)

 - Converting to various formats supported by LibreOffice
   (export plugins include PDF, DOC, HTML, ...)


== Limitations
The current implementation is not feature complete. We are working on
it and your help in testing and feedback is appreciated.

 - Incomplete implementation lacks eg. tables, TOC, ...

 - Default style does not look very well

 - Outputs flat ODF file, not a zipped ODF multi-file
   (flat ODF file is only supported by a recent LibreOffice)

 - Only document (odt) files are currently supported

We hope to address each of these limitations in the future, with your help.


== Development
You can find the latest version of this AsciiDoc backend at
http://github.com/dagwieers/asciidoc-odf[]

Any issues or feedback can be communicated using the Github web interface.


== Usage
To use this backend, copy the file _odt11.conf_ into your AsciiDoc
configuration directory _/etc/asciidoc/_. Then use:

    # asciidoc -b odt11 document.txt

This will produce the file _document.odt_.


=== Embeded Images
If you use images in your document, they can be embedded in your ODF
document. To do this use the option +-a data-uri+ on the command line
or add the following option in your AsciiDoc file just below the
document title:

    :data-uri:


=== Admonition Icon Support
If you use admonitions in your documents, please use the options
+-a icons -a iconsdir=/usr/share/asciidoc/images/icons+ to the
command line or add the following options just below the document
title:

    :icons:
    :iconsdir: /usr/share/asciidoc/images/icons

=== Using themes (or custom stylesheets)
The ODF backend can uses themes, which means that it can use alternative
stylesheets. Currently the curiculum-vitae example uses its own (basic)
theme as an example of how this is supposed to work. To select a theme
you can add the option +-a theme=cv+ on the command line or add the
following option in your AsciiDoc file just below the document title:

    :theme: cv

We plan to adapt a2x to automatically merge the existing styles from
an .odt or .ott file, so that one can save the modified work from
LibreOffice and use the styles from that document as the input for
future documents.

We think this is easier for end-users than extracting the styles
and putting it into themes, but both methods will be available.
