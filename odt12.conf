#
# odt12.conf
#
# Asciidoc configuration file.
# Open Document Format v1.1 backend.
#
# Development at: http://github.com/dagwieers/asciidoc-odf
#
# Open Document Format for Office Applications (OpenDocument) v1.1
# URL: http://docs.oasis-open.org/office/v1.1/OS/OpenDocument-v1.1.pdf

# Rules to play with styles:
#  - Display names are not allowed
#  - Style names cannot use underscores

### TODO: Currently .odt means a flat ODT file.
###       In the future we may want to use .fodt for this ?
[miscellaneous]
outfilesuffix=.odt

[attributes]
basebackend=odt
basebackend-odt=

[replacements2]
# Line break.
(?m)^(.*)\s\+$=\1<text:line-break/>

[replacements]
ifdef::asciidoc7compatible[]
# Superscripts.
\^(.+?)\^=<text:span text:style-name="superscript">\1</text:span>
# Subscripts.
~(.+?)~=<text:span text:style-name="subscript">\1</text:span>
endif::asciidoc7compatible[]

[ruler-blockmacro]
<text:p text:style-name="hr-element"/>

### FIXME: Soft page breaks are only allowed in certain elements
###        http://specs.openoffice.org/writer/SoftPageBreak/SoftPageBreak.odt
[pagebreak-blockmacro]
<text:soft-page-break/>

[blockdef-pass]
asciimath-style=template="asciimathblock",subs=[]
latexmath-style=template="latexmathblock",subs=[]

### TODO: Implement this in ODF
[macros]
(?u)^(?P<name>audio|video)::(?P<target>\S*?)(\[(?P<attrlist>.*?)\])$=#
# math macros.
# Special characters are escaped in HTML math markup.
(?su)[\\]?(?P<name>asciimath|latexmath):(?P<subslist>\S*?)\[(?P<passtext>.*?)(?<!\\)\]=[specialcharacters]
(?u)^(?P<name>asciimath|latexmath)::(?P<subslist>\S*?)(\[(?P<passtext>.*?)\])$=#[specialcharacters]

[asciimath-inlinemacro]
`{passtext}`

[asciimath-blockmacro]
<text:p{id? xml:id="{id}"} text:style-name="mathblock">
<text:p text:style-name="title">{title}</text:p>
`{passtext}`
</text:p>

[asciimathblock]
<text:p{id? xml:id="{id}"} text:style-name="mathblock">
<text:p text:style-name="title">{title}</text:p>
|
</text:p>

[latexmath-inlinemacro]
{passtext}

[latexmath-blockmacro]
<text:p{id? xml:id="{id}"} text:style-name="mathblock">
<text:p text:style-name="title">{title}</text:p>
{passtext}
</text:p>

[latexmathblock]
<text:p{id? xml:id="{id}"} text:style-name="mathblock">
<text:p text:style-name="title">{title}</text:p>
|
</text:p>

[image-inlinemacro]
<text:a xlink:type="simple" xlink:href="{link}">
{link%}<draw:frame{id? xml:id="{id}"} draw:style-name="image" draw:name="image{id?-{id}}" text:anchor-type="paragraph" draw:z-index="1"{width? svg:width="{width}"}{height? svg:height="{height}"}>
{link%}{data-uri%}<draw:image xlink:href="{imagesdir=}{imagesdir?/}{target}" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
{link%}{data-uri#}<draw:image><office:binary-data>{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{target}")}"}</office:binary-data></draw:image>
{link%}</draw:frame>
{link#}
</text:a>

### FIXME: Add {target}, {style}, {role}, {id}, {align} and {float}?
[image-blockmacro]
<text:p>
<text:a xlink:type="simple" xlink:href="{link}">
{link%}<draw:frame{id? xml:id="{id}"} draw:style-name="imageblock" draw:name="image{id?-{id}}" text:anchor-type="paragraph" draw:z-index="1"{width? svg:width="{width}"}{height? svg:height="{height}"}{align? draw:align="{align}"}>
{link%}{data-uri%}<draw:image xlink:href="{imagesdir=}{imagesdir?/}{target}" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
{link%}{data-uri#}<draw:image><office:binary-data>{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{imagesdir=}",r"{target}")}"}</office:binary-data></draw:image>
{link%}</draw:frame>
{link#}</text:a>
<text:p text:style-name="caption">{caption={figure-caption} {counter:figure-number}. }{title}</text:p>
</text:p>

### TODO: Add {autoplay-option}, {autoplay}, {nocontrols-option}, {controls}, {loop-option} and {loop}
[audio-blockmacro]
<text:p{id? xml:id="{id}"} text:style-name="audioblock">
<text:p text:style-name="title">{caption=}{title}</text:p>
<anim:audio xlink:href="{imagesdir=}{imagesdir?/}{target}" anim:audio-level="1"/>
</text:p>

### TODO: Implement this in ODF
[video-blockmacro]
<div class="videoblock{role? {role}}"{id? id="{id}"}>
<div class="title">{caption=}{title}</div>
<div class="content">
<video src="{imagesdir=}{imagesdir?/}{target}"{width? width="{width}"}{height? height="{height}"}{poster? poster="{poster}"}{autoplay-option? autoplay}{nocontrols-option! controls}{loop-option? loop}>
Your browser does not support the video tag.
</video>
</div></div>

### TODO: Implement this in ODF
[unfloat-blockmacro]
<div style="clear:both;"></div>

[indexterm-inlinemacro]
# Index term.
{empty}

[indexterm2-inlinemacro]
# Index term.
# Single entry index term that is visible in the primary text flow.
{1}

[footnote-inlinemacro]
# footnote:[<text>].
<text:note{id? xml:id="{id}"} text:note-class="footnote">
<text:note-citation>1</text:note-citation>
<text:note-body><text:p text:style-name="footnote">{0}</text:p></text:note-body>
</text:note>

### FIXME: Does not seem to work ?
[footnoteref-inlinemacro]
# footnoteref:[<id>], create reference to footnote.
{2%}<text:reference-ref text:reference-format="text" text:ref-name="{1}">[{1}]</text:reference-ref>
# footnoteref:[<id>,<text>], create footnote with ID.
{2#}<text:note{id? xml:id="{id}"} text:id="{1}" text:note-class="footnote">
{2#}<text:note-citation>1</text:note-citation>
{2#}<text:note-body><text:p text:style-name="footnote">{2}</text:p></text:note-body>
{2#}</text:note>

[callout-inlinemacro]
ifndef::icons[]
<text:span text:style-name="strong">&lt;{index}&gt;</text:span>
endif::icons[]
ifdef::icons[]
ifndef::data-uri[]
<draw:frame draw:style-name="image" draw:name="image{id?-{id}}" text:anchor-type="paragraph" draw:z-index="1">
<draw:image xlink:href="{icon={iconsdir}/callouts/{index}.png}" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
</draw:frame>
endif::data-uri[]
ifdef::data-uri[]
<draw:frame draw:style-name="image" draw:name="image{id?-{id}}" text:anchor-type="paragraph" draw:z-index="1">
<draw:image><office:binary-data>{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{icon={iconsdir}/callouts/{index}.png}")}"}</office:binary-data></draw:image>
</draw:frame>
endif::data-uri[]
endif::icons[]

# Comment line macros.
[comment-inlinemacro]
{showcomments#}<text:line-break/><text:span text:style-name="comment">{passtext}</text:span><text:line-break/>

[comment-blockmacro]
{showcomments#}<text:p text:style-name="comment">{passtext}</text:p>

[literal-inlinemacro]
# Inline literal.
<text:span text:style-name="monospaced">{passtext}</text:span>

# List tags.
### FIXME: Add {style}
[listtags-bulleted]
list=<text:list{id? xml:id="{id}"} text:style-name="ulist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
item=<text:list-item>|</text:list-item>
text=<text:p text:style-name="ulist-item">|</text:p>

### FIXME: Add {style}
[listtags-numbered]
list=<text:list{id? xml:id="{id}"} text:style-name="olist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
item=<text:list-item>|</text:list-item>
text=<text:p text:style-name="olist-item">|</text:p>

### FIXME: Add {style}
[listtags-labeled]
list=<text:list{id? xml:id="{id}"} text:style-name="dlist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
entry=<text:list-item>|</text:list-item>
label=
term=<text:p text:style-name="dt-element">|</text:p>
item=<text:p text:style-name="dd-element">|</text:p>
text=

### FIXME: Add {style}
[listtags-horizontal]
list=<text:list{id? xml:id="{id}"} text:style-name="hdlist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
label=<table:table-cell table:style-name="hdlist1.A1" office:value-type="string">|</table:table-cell>
term=|<text:line-break/>
entry=<table:table-row>|</table:table-row>
label=<table:table-cell table:style-name="hdlist2.B1" office:value-type="string">|</table:table-cell>
item=
text=<text:p>|</text:p>

### FIXME: Add {style}
[listtags-qanda]
list=<text:list{id? xml:id="{id}"} text:style-name="qlist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
entry=<text:list-item>|</text:list-item>
label=
term=<text:p text:style-name="emphasis">|</text:p>
item=
text=<text:p>|</text:p>

### FIXME: Add {style}, {role} and {id}
[listtags-callout]
ifndef::icons[]
list=<text:list{id? xml:id="{id}"} text:style-name="colist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
item=<text:list-item>|</text:list-item>
text=<text:p text:style-name="olist-item">|</text:p>
endif::icons[]
ifdef::icons[]
list=<text:p{id? xml:id="{id}"} text:style-name="colist">{title?<text:p text:style-name="title">{title}</text:p>}<table:table{id? xml:id="{id}"} table:name="table" table:style-name="colist"><table:table-column table:style-name="colist.A"/><table:table-column table:style-name="colist.B"/>|</table:table></text:p>
ifndef::data-uri[]
item=<table:table-row><table:table-cell table:style-name="colist.A1" office:value-type="string"><draw:image xlink:href="{iconsdir}/callouts/{listindex}.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></table:table-cell><table:table-cell table:style-name="colist.B1" office:value-type="string">|</table:table-cell></table:table-row>
endif::data-uri[]
ifdef::data-uri[]
item=<table:table-row><table:table-cell table:style-name="colist.A1" office:value-type="string"><draw:image><office:binary-data>{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{iconsdir}/callouts/{listindex}.png")}"}</office:binary-data></draw:image></table:table-cell><table:table-cell table:style-name="colist.B1" office:value-type="string">|</table:table-cell></table:table-row>
endif::data-uri[]
text=|
endif::icons[]

### FIXME: Add {style} ?
[listtags-glossary]
list=<text:list{id? xml:id="{id}"} text:style-name="ulist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
label=
entry=
term=<text:span text:style-name="dt-element">|</text:span>
item=<text:span text:style-name="dd-element">|</text:span>
text=<text:p>|</text:p>

### FIXME: Add {style} ?
[listtags-bibliography]
list=<text:list{id? xml:id="{id}"} text:style-name="ulist">{title?<text:p text:style-name="title">{title}</text:p>}|</text:list>
item=<text:list-item>|</text:list-item>
text=<text:p>|</text:p>

[tags]
# Quoted text.
emphasis=<text:span text:style-name="emphasis">|</text:span>
strong=<text:span text:style-name="strong">|</text:span>
monospaced=<text:span text:style-name="monospaced">|</text:span>
singlequoted={lsquo}<text:span text:style-name="normal">|</text:span>{rsquo}
doublequoted={ldquo}<text:span text:style-name="normal">|</text:span>{rdquo}
unquoted=<text:span text:style-name="normal">|</text:span>
superscript=<text:span text:style-name="superscript">|</text:span>
subscript=<text:span text:style-name="subscript">|</text:span>

### TODO: Implement this in ODF
ifdef::deprecated-quotes[]
# Override with deprecated quote attributes.
emphasis={role?<span class="{role}">}<em{1,2,3? style="}{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}{1,2,3?"}>|</em>{role?</span>}
strong={role?<span class="{role}">}<strong{1,2,3? style="}{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}{1,2,3?"}>|</strong>{role?</span>}
monospaced=<text:span text:style-name="monospaced"{1? fo-color="{1}"}{2? fo:background-color="{2}"}{3? fo:font-size="{3}em"}>|</text:span>
singlequoted={role?<span class="{role}">}{1,2,3?<span style="}{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}{1,2,3?">}{amp}#8216;|{amp}#8217;{1,2,3?</span>}{role?</span>}
doublequoted={role?<span class="{role}">}{1,2,3?<span style="}{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}{1,2,3?">}{amp}#8220;|{amp}#8221;{1,2,3?</span>}{role?</span>}
unquoted={role?<span class="{role}">}{1,2,3?<span style="{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}">}|{1,2,3?</span>}{role?</span>}
superscript={role?<span class="{role}">}<sup{1,2,3? style="}{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}{1,2,3?"}>|</sup>{role?</span>}
subscript={role?<span class="{role}">}<sub{1,2,3? style="}{1?color:{1};}{2?background-color:{2};}{3?font-size:{3}em;}{1,2,3?"}>|</sub>{role?</span>}
endif::deprecated-quotes[]

# Inline macros
[http-inlinemacro]
<text:a xlink:type="simple" xlink:href="{name}:{target}">{0={name}:{target}}</text:a>

[https-inlinemacro]
<text:a xlink:type="simple" xlink:href="{name}:{target}">{0={name}:{target}}</text:a>

[ftp-inlinemacro]
<text:a xlink:type="simple" xlink:href="{name}:{target}">{0={name}:{target}}</text:a>

[file-inlinemacro]
<text:a xlink:type="simple" xlink:href="{name}:{target}">{0={name}:{target}}</text:a>

[irc-inlinemacro]
<text:a xlink:type="simple" xlink:href="{name}:{target}">{0={name}:{target}}</text:a>

[mailto-inlinemacro]
<text:a xlink:type="simple" xlink:href="mailto:{target}">{0={target}}</text:a>

[link-inlinemacro]
<text:a xlink:type="simple" xlink:href="{target}">{0={target}}</text:a>

[callto-inlinemacro]
<text:a xlink:type="simple" xlink:href="{name}:{target}">{0={target}}</text:a>

# anchor:id[xreflabel]
[anchor-inlinemacro]
<text:reference-mark text:name="{target}"/>

### FIXME: Does not seem to work ?
# [[id,xreflabel]]
[anchor2-inlinemacro]
<text:reference-mark text:name="{1}"/>

### FIXME: Does not seem to work ?
# [[id]]
[anchor3-inlinemacro]
<text:reference-mark text:name="{1}"/>[{1}]

# xref:id[text]
[xref-inlinemacro]
<text:reference-ref text:reference-format="text" text:ref-name="{target}">{0=[{target}]}</text:reference-ref>

# <<id,text>>
[xref2-inlinemacro]
<text:reference-ref text:reference-format="text" text:ref-name="{1}">{2=[{1}]}</text:reference-ref>

# Special word substitution.
[emphasizedwords]
<text:span text:style-name="emphasis">{words}</text:span>
[monospacedwords]
<text:span text:style-name="monospaced">{words}</text:span>
[strongwords]
<text:span text:style-name="strong">{words}</text:span>

# Paragraph substitution.
[paragraph]
<text:p{id? xml:id="{id}"} text:style-name="paragraph">{title?<text:p text:style-name="title">{title}</text:p>}
|
</text:p>

[admonitionparagraph]
template::[admonitionblock]

# Delimited blocks.
### FIXME: Preserve line-breaks
[listingblock]
{title?<text:p text:style-name="title">{title}</text:p>}
<text:p{id? xml:id="{id}"} text:style-name="listingblock">
|
</text:p>

[literalblock]
{title?<text:p text:style-name="title">{title}</text:p>}
<text:p{id? xml:id="{id}"} text:style-name="literalblock">
|
</text:p>

[sidebarblock]
<text:p>
<draw:frame{id? xml:id="{id}"} draw:style-name="sidebarblock" draw:name="frame{id?-{id}}" text:anchor-type="paragraph" draw:z-index="0">
<draw:text-box fo:min-height="0mm">
<text:p text:style-name="title">{title}</text:p>
|
</draw:text-box>
</draw:frame>
</text:p>

### FIXME: Add {role} ?
[openblock]
<text:p{id? xml:id="{id}"} text:style-name="openblock">
<text:p text:style-name="title">{title}</text:p>
|
</text:p>

[partintroblock]
template::[openblock]

[abstractblock]
template::[quoteblock]

### FIXME: Add {role} ?
[quoteblock]
{title?<text:p text:style-name="title">{title}</text:p>}
<text:p{id? xml:id="{id}"} text:style-name="quoteblock">
|
<text:p text:style-name="attribution">
<text:span text:style-name="emphasis">{citetitle}</text:span>{attribution?<text:line-break/>}
&#8212; {attribution}
</text:p>
</text:p>

### FIXME: Add {role} ?
### FIXME: Preserve line-breaks
[verseblock]
<text:p{id? xml:id="{id}"} text:style-name="verseblock">
<text:p text:style-name="title">{title}</text:p>
|
<text:p text:style-name="attribution">
<text:span text:style-name="emphasis">{citetitle}</text:span>{attribution?<text:line-break/>}
&#8212; {attribution}
</text:p>
</text:p>

### FIXME: Add {role} ?
[exampleblock]
<text:p{id? xml:id="{id}"} text:style-name="exampleblock">
<text:p text:style-name="title">{caption={example-caption} {counter:example-number}. }{title}</text:p>
|
</text:p>

[admonitionblock]
<table:table{id? xml:id="{id}"} table:name="table" table:style-name="admonitionblock">
<table:table-column table:style-name="admonition.A"/>
<table:table-column table:style-name="admonition.B"/>
<table:table-row>
<table:table-cell table:style-name="admonition.A1" office:value-type="string">
<text:p text:style-name="caption">
{icons#}<draw:frame draw:style-name="admonition" draw:name="admonition{id?-{id}}" text:anchor-type="paragraph" draw:z-index="1" svg:width="15mm" svg:height="15mm">
{icons#}{data-uri%}<draw:image xlink:href="{icon={iconsdir}/{name}.png}" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/>
{icons#}{data-uri#}<draw:image><office:binary-data>{sys:python -uc "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{icon={iconsdir}/{name}.png}")}"}</office:binary-data></draw:image>
{icons#}</draw:frame>
{icons%}{caption}
</text:p>
</table:table-cell>
<table:table-cell table:style-name="admonition.B1" office:value-type="string">
<text:p text:style-name="title">{title}</text:p>
<text:p text:style-name="paragraph">
|
</text:p>
</table:table-cell>
</table:table-row>
</table:table>

# Tables.
[tabletags-default]
colspec=<table:table-column {autowidth-option! style:column-width="{colpcwidth}*"}/>
bodyrow=<table:table-row>|</table:table-row>
headrow=<table:table-row>|</table:table-row>
headdata=<table:table-cell><text:p text:style-name="header">|</text:p></table:table-cell>
bodydata=<table:table-cell>|</table:table-cell>
paragraph=<text:p text:style-name="tableblock">|</text:p>

[tabletags-header]
paragraph=<text:p text:style-name="table"><text:span text:style-name="header">|</text:span></text:p>

[tabletags-emphasis]
paragraph=<text:p text:style-name="tableblock"><text:span text:style-name="emphasis">|</text:span></text:p>

[tabletags-strong]
paragraph=<text:p text:style-name="tableblock"><text:span text:style-name="strong">|</text:span></text:p>

[tabletags-monospaced]
paragraph=<text:p text:style-name="tableblock"><text:span text:style-name="monospaced">|</text:span></text:p>

[tabletags-verse]
#bodydata=<td class="tableblock halign-{halign=left} valign-{valign=top}" {colspan@1::colspan="{colspan}" }{rowspan@1::rowspan="{rowspan}" }><div class="verse">|</div></td>
bodydata=<table:table-cell text:style-name="tableblock"><text:span text:style-name="verse">|</text:span></table:table-cell>
paragraph=

[tabletags-literal]
#bodydata=<td class="tableblock halign-{halign=left} valign-{valign=top}" {colspan@1::colspan="{colspan}" }{rowspan@1::rowspan="{rowspan}" }><div class="literal monospaced"><pre>|</pre></div></td>
bodydata=<table:table-cell text:style-name="tableblock"><text:span text:style-name="monospaced">|</text:span></table:table-cell>
paragraph=

[tabletags-asciidoc]
#bodydata=<td class="tableblock halign-{halign=left} valign-{valign=top}" {colspan@1::colspan="{colspan}" }{rowspan@1::rowspan="{rowspan}" }><div>|</div></td>
bodydata=<table:table-cell text:style-name="tableblock"><text:span>|</text:span></table:table-cell>
paragraph=

### TODO: Implement this in ODF
[table]
<table:table{id? xml:id="{id}"} table:name="table" table:style-name="tableblock">
#<text:p text:style-name="caption">{caption={table-caption} {counter:table-number}. }{title}</text:p>
<table:table-columns>{colspecs}</table:table-columns>
{headrows#}<table:table-header-rows>
{headrows}
{headrows#}</table:table-header-rows>
#{footrows#}<tfoot>
{footrows}
#{footrows#}</tfoot>
{bodyrows}
</table:table>

#--------------------------------------------------------------------
# Deprecated old table definitions.


### TODO: Implement this in ODF
[miscellaneous]
# Screen width in pixels.
pagewidth=800
pageunits=px

### TODO: Implement this in ODF
[old_tabledef-default]
template=old_table
colspec=<col style="width:{colwidth}{pageunits};" />
bodyrow=<tr>|</tr>
headdata=<th class="tableblock halign-{colalign=left}">|</th>
footdata=<td class="tableblock halign-{colalign=left}">|</td>
bodydata=<td class="tableblock halign-{colalign=left}">|</td>

### TODO: Implement this in ODF
[old_table]
<table class="tableblock frame-{frame=all} grid-{grid=all}"{id? id="{id}"}>
<caption class="title">{caption={table-caption}}{title}</caption>
{colspecs}
{headrows#}<thead>
{headrows}
{headrows#}</thead>
{footrows#}<tfoot>
{footrows}
{footrows#}</tfoot>
<tbody style="vertical-align:top;">
{bodyrows}
</tbody>
</table>

# End of deprecated old table definitions.
#--------------------------------------------------------------------

### TODO: Implement this in ODF
[floatingtitle]
#<h{level@0:1}{level@1:2}{level@2:3}{level@3:4}{level@4:5}{id? id="{id}"} class="float">{title}</h{level@0:1}{level@1:2}{level@2:3}{level@3:4}{level@4:5}>
<text:h{id? xml:id="{id}"} text:style-name="sect{level}" text:outline-level="{level}">{title}</text:h>

# Untitled elements between header and first section title.
# ### FIXME: Description is missing ?
[preamble]
#<text:p text:style-name="preamble">
{|%}|
#</text:p>

# Document sections.
### FIXME: Add {style} ?
[sect0]
<text:h text:style-name="sect0" text:outline-level="0">{title}</text:h>
|

### FIXME: Add {style} ?
[sect1]
<text:h text:style-name="sect1" text:outline-level="1">{numbered?{sectnum} }{title}</text:h>
|

### FIXME: Add {style} ?
[sect2]
<text:h text:style-name="sect2" text:outline-level="2">{numbered?{sectnum} }{title}</text:h>
|

### FIXME: Add {style} ?
[sect3]
<text:h text:style-name="sect3" text:outline-level="3">{numbered?{sectnum} }{title}</text:h>
|

### FIXME: Add {style} ?
[sect4]
<text:h text:style-name="sect4" text:outline-level="4">{numbered?{sectnum} }{title}</text:h>
|

### FIXME: Add {style} ?
[appendix]
<text:h{id? xml:id="{id}"} text:style-name="sect1" text:outline-level="1">{numbered?{sectnum} }{appendix-caption} {counter:appendix-number:A}: {title}</text:h>
|

### FIXME: This does not work !
[toc]
<text:table-of-content></text:table-of-content>

[header]
### FIXME: Using {encoding} but AsciiDoc uses utf8 and XML requires UTF-8 ?
<?xml version="1.0" encoding="UTF-8"?>
<office:document office:class="text" office:mimetype="application/vnd.oasis.opendocument.text" xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" office:version="1.2" grddl:transformation="http://docs.oasis-open.org/office/1.2/xslt/odf2rdf.xsl">

<!-- scripts -->
<office:scripts/>

<!-- meta -->
<office:meta>
<dc:title>{doctitle}</dc:title>
<dc:subject>{keywords}</dc:subject>
<dc:description>{description}</dc:description>
<text:date xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0"/>
<dc:creator>{author}</dc:creator>
<dc:date>{revdate}</dc:date>
<dc:language>{lang=en}</dc:language>
<meta:initial-creator>{author}{email? &lt;{email}&gt;}</meta:initial-creator>
<meta:generator>AsciiDoc {asciidoc-version}</meta:generator>
<meta:keyword>{keywords}</meta:keyword>
<meta:user-defined meta:name="Author" meta:value-type="string">{author}</meta:user-defined>
<meta:user-defined meta:name="Email" meta:value-type="string">{email}</meta:user-defined>
<meta:user-defined meta:name="Date" meta:value-type="date">{date}</meta:user-defined>
#<meta:user-defined meta:name="Field 2" meta:value-type="float">1.234</meta:user-defined>
</office:meta>

### ODF 1.2 ?
#<!-- settings -->
#<office:settings>
#<config:config-item-set config:name="ooo:configuration-settings">
#<config:config-item config:name="LoadReadonly" config:type="boolean">true</config:config-item>
#</config:config-item-set>
#</office:settings>
#
include1::{theme%}{stylesdir=./stylesheets}/asciidoc.odt.styles[]
include1::{themedir}/{theme}.odt.styles[]

<!-- body -->
<office:body>
<office:text text:use-soft-page-breaks="true">
{notitle%}<text:p text:style-name="sect0"><text:title/></text:p>
ifdef::revnumber[]
<text:p xml:id="header">
{author#}<text:span text:style-name="author"><text:author-name text:fixed="true">{author}</text:author-name></text:span>
{email#}<text:line-break/><text:span text:style-name="email">&lt;<text:a xlink:type="simple" xlink:href="mailto:{email}">{email}</text:a>&gt;</text:span>
<text:line-break/>version {revnumber}{revdate?,}
{revremark#}<text:line-break/>{revremark}
</text:p>
endif::revnumber[]

[footer]
</office:text>
</office:body>
</office:document>
